---
import { Schema } from 'astro-seo-schema'

import Favicons from '@components/Favicons.astro'
import SplashScreens from '@components/SplashScreens.astro'
import Footer from '@components/Footer.astro'
import BottomBar from '@components/BottomBar.astro'
import Aside from '@components/Aside/index.astro'
import ModalShare from '@components/ModalShare.astro'
import UpdatePWAButton from '@components/UpdatePWAButton.astro'
import PromptiOS from '@components/PromptiOS.astro'

import '@styles/tailwind.css'
import '@styles/safe-areas.css'

const { options } = Astro.props
---

<html class="dark" dir="ltr" lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=2.0, viewport-fit=cover"
    />

    <title>{options.title}</title>

    <link crossorigin href="//www.googletagmanager.com/" rel="preconnect" />
    <link crossorigin href="//www.google-analytics.com/" rel="preconnect" />

    <slot name="preconnect" />

    <script is:inline>
      function getPreference() {
        if (localStorage.getItem('darkmode')) {
          return localStorage.getItem('darkmode') === 'true'
        } else {
          return window.matchMedia('(prefers-color-scheme: dark)').matches
        }
      }

      if (getPreference()) document.documentElement.classList.add('dark')
      else document.documentElement.classList.remove('dark')
    </script>

    <slot name="async-scripts" />

    <slot name="critical-css" />

    <style is:inline>
      body::-webkit-scrollbar {
        width: 7px;
        height: 7px;
        background: #ffedd5;
      }

      body::-webkit-scrollbar-thumb {
        border-radius: 4px;
        background: #fdba74;
        transition: background 150ms cubic-bezier(0.4, 0, 0.2, 1);
        will-change: background;
      }

      @media (any-hover: hover) {
        body::-webkit-scrollbar-thumb:hover {
          background: #ff8a4c;
        }
      }

      body {
        scroll-padding-top: 130px;
        scrollbar-color: #fdba74 #ffedd5;
        scrollbar-width: thin;
        scrollbar-gutter: stable;
      }
    </style>

    <slot name="stylesheet" />

    <slot name="preload" />

    <slot name="defer-scripts" />

    <meta name="robots" content={options.meta_robots || 'index, follow'} />
    {
      options.description && (
        <meta name="description" content={options.description} />
      )
    }
    {options.description && <link href={Astro.url.href} rel="canonical" />}
    <meta name="author" content="F√©lix Icaza - https://felixicaza.com" />
    <meta name="generator" content={Astro.generator} />

    {
      options.description && (
        <Schema
          item={{
            '@context': 'https://schema.org',
            '@type': 'Organization',
            name: 'Estel√≠ Buses',
            url: 'https://estelibuses.web.app',
            logo: 'https://estelibuses.web.app/favicons/android-chrome-512x512.png',
            sameAs: ['https://www.facebook.com/estelibuses']
          }}
        />
      )
    }

    <slot name="schema" />

    <Favicons />

    <meta name="color-scheme" content="dark light" />
    <meta name="theme-color" content={options.theme_color || '#fb923c'} />
    <meta
      name="msapplication-TileColor"
      content={options.theme_color || '#fb923c'}
    />
    <link href="/manifest.json" rel="manifest" />

    <script is:inline>
    const themeColor = document.querySelector('meta[name="theme-color"]')

    if (getPreference()) {
      if (window.location.pathname.includes('terminal-norte-esteli')) {
        themeColor.setAttribute('content', '#1b664b')
      }

      if (window.location.pathname.includes('terminal-sur-esteli')) {
        themeColor.setAttribute('content', '#8a670f')
      }

      if (
        !window.location.pathname.includes('terminal-norte-esteli')
        && !window.location.pathname.includes('terminal-sur-esteli')
      ) {
        themeColor.setAttribute('content', '#ad6830')
      }
    } else {
      if (window.location.pathname.includes('terminal-norte-esteli')) {
        themeColor.setAttribute('content', '#34d399')
      }

      if (window.location.pathname.includes('terminal-sur-esteli')) {
        themeColor.setAttribute('content', '#fbbf24')
      }

      if (
        !window.location.pathname.includes('terminal-norte-esteli')
        && !window.location.pathname.includes('terminal-sur-esteli')
      ) {
        themeColor.setAttribute('content', '#fb923c')
      }
    }
    </script>

    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="apple-touch-fullscreen" content="yes" />
    <meta name="apple-mobile-web-app-title" content="Estel√≠ Buses" />
    <meta name="application-name" content="Estel√≠ Buses" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="mobile-web-app-capable" content="yes" />

    <SplashScreens />

    <slot name="social-media" />

    <meta name="google-site-verification" content="IJH7DDHaPX1Us0he6rNkTPlC_9I5G5aktg3SKheBUNw" />
  </head>
  <body>
    <slot />

    <Footer />

    <BottomBar />

    <Aside />

    <ModalShare />

    <slot name="dynamic-components" />

    <UpdatePWAButton />

    <PromptiOS />

    <noscript class="bg-danger-600 fixed bottom-0 left-0 z-20 w-full">
      <article class="container mx-auto flex flex-col gap-8 px-4 py-8 text-white md:flex-row">
        <section class="flex-1">
          <svg class="fill-current" width="50" height="50">
            <use href="/img/vector-sprites.svg#alert"></use>
          </svg>
        </section>
        <section class="flex-shrink">
          <p class="mb-2 text-2xl font-semibold text-white">
            JavaScript est√° desactivado.
          </p>
          <p class="text-white">
            Para usar todas las funcionalidades del sitio web es necesario tener
            JavaScript activado.
            <a
              class="text-white underline"
              href="https://www.enable-javascript.com/es/"
              referrerpolicy="no-referrer"
              rel="external noopenner nofollow noreferrer"
              target="_blank"
            >
              Haz click aqu√≠ para saber c√≥mo activar JavaScript
              <svg class="mb-[0.175rem] ml-1 inline" width="16" height="16">
                <use href="/img/vector-sprites.svg#external"></use>
              </svg>
            </a>
            , y sigue las instrucciones en tu navegador. Si no encuentras el
            tuyo, considera descargar uno m√°s actualizado; recomiendo
            <a
              class="text-white underline"
              href="https://www.mozilla.org/es-ES/firefox/new/"
              referrerpolicy="no-referrer"
              rel="external noopenner nofollow noreferrer"
              target="_blank"
            >
              Mozilla Firefox
              <svg class="mb-[0.175rem] ml-1 inline" width="16" height="16">
                <use href="/img/vector-sprites.svg#external"></use>
              </svg>
            </a>
            ,
            <a
              class="text-white underline"
              href="https://www.google.com/intl/es/chrome/"
              referrerpolicy="no-referrer"
              rel="external noopenner nofollow noreferrer"
              target="_blank"
            >
              Google Chrome
              <svg class="mb-[0.175rem] ml-1 inline" width="16" height="16">
                <use href="/img/vector-sprites.svg#external"></use>
              </svg>
            </a>
            {' '}
            o
            {' '}
            <a
              class="text-white underline"
              href="https://www.microsoft.com/es-es/edge/"
              referrerpolicy="no-referrer"
              rel="external noopenner nofollow noreferrer"
              target="_blank"
            >
              Microsoft Edge Chromium
              <svg class="mb-[0.175rem] ml-1 inline" width="16" height="16">
                <use href="/img/vector-sprites.svg#external"></use>
              </svg>
            </a>
            , pero tambi√©n puedes descargar el t√∫ quieras üòâ.
          </p>
        </section>
      </article>
    </noscript>
  </body>
</html>

<script>
  import { initializeApp } from 'firebase/app'
  import { getAnalytics } from 'firebase/analytics'

  declare global {
    interface Window {
      dataLayer: any
    }
  }

  const isProd = import.meta.env.PROD

  const firebaseConfig = {
    apiKey: 'AIzaSyAqPF5z2zeJCAXKmnAV6gfapspOK4joCEs',
    authDomain: 'buses-esteli-d2d5e.firebaseapp.com',
    projectId: 'buses-esteli-d2d5e',
    storageBucket: 'buses-esteli-d2d5e.appspot.com',
    messagingSenderId: '47347043568',
    appId: '1:47347043568:web:e1b9a83b88c35fe1a0c635',
    measurementId: 'G-4QFJH1D53Q'
  }

  if (isProd) {
    const app = initializeApp(firebaseConfig)
    getAnalytics(app)

    const dataLayer = window.dataLayer || []

    function gtag(...args: any[]) {
      dataLayer.push(...args)
    }

    window.dataLayer = window.dataLayer || []
    gtag('js', new Date())

    /**
     * Service Worker script
     */

    const soundPage = new Audio('/sounds/switch-tap.mp3')
    const isMobile = navigator.userAgent.match(/Android|iPhone|iPad|iPod/i)

    window.addEventListener('load', async () => {
      const reloadBtn = document.getElementById('reload')

      function showUpdateFounded(registration: ServiceWorkerRegistration) {
        reloadBtn?.classList.replace('opacity-0', 'opacity-100')

        setTimeout(() => {
          if (isMobile) {
            reloadBtn?.classList.replace('translate-y-20', '-translate-y-20')
          } else {
            reloadBtn?.classList.replace('right-0', 'left-0')
            reloadBtn?.classList.replace('-translate-x-4', 'translate-x-8')
            reloadBtn?.classList.replace('translate-y-20', '-translate-y-12')
          }
        }, 500)

        reloadBtn?.addEventListener('click', () => {
          if (localStorage.getItem('sounds_enabled') === 'true') {
            soundPage.play()
          }

          if (
            'vibrate' in navigator
            && localStorage.getItem('sounds_enabled') === 'false'
          ) {
            navigator.vibrate(80)
          }

          if (registration.waiting) {
            registration.waiting.postMessage('SKIP_WAITING')
          }
        })
      }

      const registration = await navigator.serviceWorker.register('/sw.js')

      if (registration.waiting) {
        showUpdateFounded(registration)
      }

      registration.addEventListener('updatefound', () => {
        if (registration.installing) {
          registration.installing.addEventListener('statechange', () => {
            if (registration.waiting) {
              if (navigator.serviceWorker.controller) {
                showUpdateFounded(registration)
              }
            }
          })
        }
      })
    })

    /**
             * Update PWA
             */

    let refreshing: boolean

    navigator.serviceWorker.addEventListener('controllerchange', () => {
      if (!refreshing) {
        window.location.reload()
        refreshing = true
      }
    })
  }
</script>
